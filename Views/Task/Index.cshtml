@model PageResultViewModel<TaskManagerUI.Models.TaskViewModel>

@{
    ViewData["Title"] = "Tasks";
}

<h1>Tasks</h1>

<p>
    <a asp-action="Create" class="btn btn-outline-primary mt-2">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Items.First().Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items.First().Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items.First().Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items.First().Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items.First().ProjectId)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProjectId)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-outline-primary" }) |
                    @Html.ActionLink("Assigned To", "AssignedTo", new { id = item.Id }, new { @class = "btn btn-outline-success" }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-outline-danger" })
                </td>
            </tr>
        }
    </tbody>
</table>

<nav>
    <ul class="pagination">
        @if (Model.CurrentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage - 1)">Previous</a>
            </li>
        }
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
            </li>
        }
        @if (Model.CurrentPage < Model.TotalPages)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage + 1)">Next</a>
            </li>
        }
    </ul>
</nav>
